FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04 AS exp-image

ENV PYVER=3.7.7

ENV DEBCONF_NOWARNINGS yes
ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        gcc \
        g++ \
        git \
        less \
        make \
        nginx \
        software-properties-common \
        sudo \
        vim \
        wget \
        zip \
        || true \
    && rm -rf /var/lib/apt/lists/*

# Pyenv
RUN add-apt-repository ppa:deadsnakes/ppa \
    && apt-get install -y \
        libbz2-dev \
        libffi-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        zlib1g-dev
RUN git clone https://github.com/pyenv/pyenv.git ~/.pyenv \
    && echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc \
    && echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc \
    && echo 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bashrc
ENV PATH $PATH:/root/.pyenv/bin
# Install Python
RUN pyenv install ${PYVER}
RUN pyenv global ${PYVER}
RUN pyenv rehash
ENV PATH $PATH:/root/.pyenv/shims
RUN pip install --upgrade pip

# Poetry
RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
ENV PATH /root/.poetry/bin:$PATH
RUN poetry completions bash > /etc/bash_completion.d/poetry.bash-completion \
    && poetry self update \
    && poetry config virtualenvs.in-project true --local

# Locale
RUN add-apt-repository ppa:deadsnakes/ppa \
    && apt-get install -y \
        language-pack-ja-base \
        language-pack-ja
RUN update-locale LANG=ja_JP.UTF-8

# If you need, create a virtual environment beforehand then copy it
# COPY ../docker-python/${PROJECT_NAME} /home/${PROJECT_NAME}
WORKDIR /home/${PROJECT_NAME}

# Config and clean up
RUN ldconfig \
    && apt-get clean \
    && apt-get autoremove

CMD ["bash", "docker/entrypoint.sh"]
